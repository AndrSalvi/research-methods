ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
df2
df2
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "Vote share") +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_03.pdf", width = 6, height = 4)
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_03.pdf", width = 4, height = 3)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "Vote share") +
scale_y_continuous(limits = c(0, 0.35)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_02.pdf", width = 4, height = 3)
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_01.pdf", width = 4, height = 3)
N <- 1001
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df <- data.frame(
obs = c("Fianna Fáil (poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
library(tidyverse)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.35)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_01.pdf", width = 4, height = 3)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.35)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_02.pdf", width = 4, height = 3)
N <- 30
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_03.pdf", width = 4, height = 3)
N <- 1001
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
library(tidyverse)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.35)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_01.pdf", width = 4, height = 3)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.35)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_02.pdf", width = 4, height = 3)
N <- 30
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_03.pdf", width = 4, height = 3)
N <- 10000
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
N <- 100000
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
N <- 50000
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
N <- 10000
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_04.pdf", width = 4, height = 3)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 50))
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.5)) +
theme_bw()
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.45)) +
theme_bw()
N <- 100
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
theme_bw()
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.45)) +
theme_bw()
N <- 1001
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
library(tidyverse)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_01.pdf", width = 4, height = 3)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_02.pdf", width = 4, height = 3)
N <- 100
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_03.pdf", width = 4, height = 3)
N <- 10000
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw()
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_04.pdf", width = 4, height = 3)
N <- 1001
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
library(tidyverse)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw() +
theme(axis.text=element_text(colour="black"))
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_01.pdf", width = 4, height = 3)
ggplot(df, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw() +
theme(axis.text=element_text(colour="black"))
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_02.pdf", width = 4, height = 3)
N <- 100
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw() +
theme(axis.text=element_text(colour="black"))
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_03.pdf", width = 4, height = 3)
N <- 10000
p <- 0.29
z <- 1.96
ci_low <-  p - z *  sqrt(p * (1 - p)/N)
ci_high <- p + z * sqrt(p * (1 - p)/N)
df2 <- data.frame(
obs = c("Fianna Fáil (current poll)", "Fianna Fáil (2016 election)"),
ci_low = c(ci_low, NA),
ci_high = c(ci_high, NA),
mean = c(p, 0.24)
)
ggplot(df2, aes(x = obs, y = mean)) +
geom_bar(stat = "identity", fill = "darkgreen", width = 0.7) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0.5, size = 1.5) +
labs(x = NULL, y = "(Expected) vote share") +
scale_y_continuous(limits = c(0, 0.4)) +
theme_bw() +
theme(axis.text=element_text(colour="black"))
ggsave("/Users/stefan/GitHub/research-methods/plots/mt_08_ff_04.pdf", width = 4, height = 3)
install.packages("tm")
dfm_weight_pres <- data_corpus_inaugural %>%
corpus_subset(Year > 2000) %>%
dfm(remove = stopwords("english"), remove_punct = TRUE) %>%
dfm_weight(scheme = "prop")
require(quanteda)
require(ggplot2)
# create dfm with presidents since 2000
# and calculate relative frequencies
dfm_weight_pres <- data_corpus_inaugural %>%
corpus_subset(Year > 2000) %>%
dfm(remove = stopwords("english"), remove_punct = TRUE) %>%
dfm_weight(scheme = "prop")
# create dfm with presidents since 2000
# and calculate relative frequencies
dfm_weight_pres <- data_corpus_inaugural %>%
corpus_subset(Year > 2000) %>%
dfm(remove = stopwords("english"), remove_punct = TRUE) %>%
dfm_weight(type = "prop")
# create dfm with presidents since 2000
# and calculate relative frequencies
dfm_weight_pres <- data_corpus_inaugural %>%
corpus_subset(Year > 2000) %>%
dfm(remove = stopwords("english"), remove_punct = TRUE) %>%
dfm_weight(scheme = "prop")
presDfm <- dfm(corpus_subset(data_corpus_SOTU, Date > as.Date("1980-01-01")),
stem = TRUE, remove_punct = TRUE,
remove = stopwords("english"))
data(data_corpus_SOTU, package = "quanteda.corpora")
library(mtcars)
mtcars
?mtcars
lm(mpg ~ hp, data = mtcars)
library(tidyverse)
ggplot(data = mtcars, aes(x = mpg, y = hp))
ggplot(data = mtcars, aes(x = mpg, y = hp)) +
geom_point()
ggplot(data = mtcars, aes(x = mpg, y = hp)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm") +
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Horsepower", "Miles per gallon")
library(tidyverse)
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Horsepower", "Miles per gallon")
ggsave("plots/reg_example.pdf", width = 6, height = 4)
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_jitter(size = 3) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", "Miles per gallon")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_jitter(size = 3, alpha = 0.8) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", "Miles per gallon")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_jitter(size = 3, alpha = 0.4) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", "Miles per gallon")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_jitter(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", "Miles per gallon")
ggsave("plots/reg_example.pdf", width = 6, height = 4)
ggsave("plots/reg_example.pdf", width = 5, height = 3)
lm(mpg ~ hp, data = mtcars)
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_jitter(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", y = "Miles per gallon")
ggsave("plots/reg_example.pdf", width = 5, height = 3)
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_poing(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", y = "Miles per gallon")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", y = "Miles per gallon")
ggplot(data = mtcars, aes(x = mpg, y = hp)) +
geom_point(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", y = "Miles per gallon")
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", y = "Miles per gallon")
ggsave("plots/reg_example.pdf", width = 5, height = 3)
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
geom_point(size = 3, alpha = 0.6) +
geom_smooth(method = "lm") +
labs(x = "Horsepower", y = "Miles per gallon") +
theme_bw()
ggsave("plots/reg_example.pdf", width = 5, height = 3)
install.packages(
lib  = lib <- .libPaths()[1],
pkgs = as.data.frame(installed.packages(lib), stringsAsFactors=FALSE)$Package,
type = 'source'
)
# list all packages where an update is available
old.packages()
# update all available packages
update.packages()
y
y
y
# list all packages where an update is available
old.packages()
# update all available packages
update.packages()
library(tidyverse)
library(haven)
library(lmtest)
library(texreg)
dataset <- read_sav("data/ht_05/Norris.sav")
# load dataset
dataset <- read_sav("data/ht_05/Norris.sav")
# load required packages
library(tidyverse)
library(haven)
library(lmtest)
library(texreg)
# load dataset
dataset <- read_sav("data/ht_05/Norris.sav")
# run correlations
dataset %>%
select(GDP2002, FM_Lit2002, F_Work2002, SDI) %>%
cor(use = "pairwise.complete")
# run regression
lm1 <- lm(GDP2002 ~ FM_Lit2002 + F_Work2002 + SDI,
data = dataset)
# show regression model
screenreg(lm1)
# display plots for regression assumptions
plot(lm1)
#library(haven)
library(lmtest)
library(texreg)
# load dataset
dataset <- read_sav("data/ht_05/Norris.sav")
# load required packages
library(tidyverse)
library(lmtest)
library(texreg)
library(lmtest)
# load dataset
dataset <- read_sav("data/ht_05/Norris.sav")
# run correlations
dataset %>%
select(GDP2002, FM_Lit2002, F_Work2002, SDI) %>%
cor(use = "pairwise.complete")
cor``
?cor
# run correlations
dataset %>%
select(GDP2002, FM_Lit2002, F_Work2002, SDI) %>%
cor(use = "pairwise.complete")
# run regression
lm1 <- lm(GDP2002 ~ FM_Lit2002 + F_Work2002 + SDI,
data = dataset)
# show regression model
screenreg(lm1)
# display plots for regression assumptions
plot(lm1)
# conduct DW test
dwtest(lm1)
