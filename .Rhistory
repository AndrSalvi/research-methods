library(dplyr)
library(ggplot2)
library(rgdal)
library(shiny)
library(RColorBrewer)
shinyServer(function(input, output) {
load("gadf.Rdata")
# reactive data
passData <- reactive({
firstData <- filter(gadf, date >= input$dateRange[1] & date <= input$dateRange[2])
if(!is.null(input$domainShow)){
firstData <- filter(firstData, networkDomain %in% input$domainShow)
}
return(firstData)
})
# text summary
output$textDisplay <- renderText({
paste(
length(seq.Date(input$dateRange[1], input$dateRange[2], by = "days")),
" days are summarised. There were", sum(passData()$users),
"users in this time period."
)
})
output$trend <- renderPlot({
groupByDate <- group_by(passData(), YearMonth, networkDomain) %>%
summarise(meanSession = mean(sessionDuration, na.rm = TRUE),
users = sum(users),
newUsers = sum(newUsers), sessions = sum(sessions))
groupByDate$Date <- as.Date(paste0(groupByDate$YearMonth, "01"), format = "%Y%m%d")
thePlot <- ggplot(groupByDate,
aes_string(x = "Date", y = input$outputRequired,
group = "networkDomain", colour = "networkDomain")) +
geom_line()
if(input$smooth){
thePlot <- thePlot + geom_smooth()
}
print(thePlot)
})
# produce map
output$ggplotMap <- renderPlot ({
groupCountry <- group_by(passData(), country)
groupByCountry <- summarise(groupCountry, meanSession = mean(sessionDuration),
users = log(sum(users)), sessions = log(sum(sessions)))
world <- readOGR(dsn=".", layer="world_country_admin_boundary_shapefile_with_fips_codes")
countries <- world@data
countries <- cbind(id = rownames(countries), countries)
countries <- merge(countries, groupByCountry, by.x = "CNTRY_NAME", by.y = "country", all.x = TRUE)
map.df <- fortify(world)
map.df <- merge(map.df, countries, by = "id")
ggplot(map.df, aes(x = long, y = lat, group = group)) +
geom_polygon(aes_string(fill = input$outputRequired)) +
geom_path(colour = "grey50") +
scale_fill_gradientn(colours = rev(brewer.pal(9, "Spectral")),
na.value = "white") +
coord_fixed() + labs(x = "", y = "")
})
})
runApp('~/Downloads/basicGoogleAnalytics2ndEdition-master')
install.packages("rgdal")
library(dplyr)
library(ggplot2)
library(rgdal)
library(shiny)
library(RColorBrewer)
shinyServer(function(input, output) {
load("gadf.Rdata")
# reactive data
passData <- reactive({
firstData <- filter(gadf, date >= input$dateRange[1] & date <= input$dateRange[2])
if(!is.null(input$domainShow)){
firstData <- filter(firstData, networkDomain %in% input$domainShow)
}
return(firstData)
})
# text summary
output$textDisplay <- renderText({
paste(
length(seq.Date(input$dateRange[1], input$dateRange[2], by = "days")),
" days are summarised. There were", sum(passData()$users),
"users in this time period."
)
})
output$trend <- renderPlot({
groupByDate <- group_by(passData(), YearMonth, networkDomain) %>%
summarise(meanSession = mean(sessionDuration, na.rm = TRUE),
users = sum(users),
newUsers = sum(newUsers), sessions = sum(sessions))
groupByDate$Date <- as.Date(paste0(groupByDate$YearMonth, "01"), format = "%Y%m%d")
thePlot <- ggplot(groupByDate,
aes_string(x = "Date", y = input$outputRequired,
group = "networkDomain", colour = "networkDomain")) +
geom_line()
if(input$smooth){
thePlot <- thePlot + geom_smooth()
}
print(thePlot)
})
# produce map
output$ggplotMap <- renderPlot ({
groupCountry <- group_by(passData(), country)
groupByCountry <- summarise(groupCountry, meanSession = mean(sessionDuration),
users = log(sum(users)), sessions = log(sum(sessions)))
world <- readOGR(dsn=".", layer="world_country_admin_boundary_shapefile_with_fips_codes")
countries <- world@data
countries <- cbind(id = rownames(countries), countries)
countries <- merge(countries, groupByCountry, by.x = "CNTRY_NAME", by.y = "country", all.x = TRUE)
map.df <- fortify(world)
map.df <- merge(map.df, countries, by = "id")
ggplot(map.df, aes(x = long, y = lat, group = group)) +
geom_polygon(aes_string(fill = input$outputRequired)) +
geom_path(colour = "grey50") +
scale_fill_gradientn(colours = rev(brewer.pal(9, "Spectral")),
na.value = "white") +
coord_fixed() + labs(x = "", y = "")
})
})
runApp('~/Downloads/basicGoogleAnalytics2ndEdition-master')
library(tidyverse)
head(mtcars)
dta <- read.csv("/Users/stefan/Downloads/DP_LIVE_07102017181439450.csv")
View(dta)
dta <- read.csv("/Users/stefan/Downloads/DP_LIVE_07102017181439450.csv") %>%
filter(year == "2013")
names(dta)
dta <- read.csv("/Users/stefan/Downloads/DP_LIVE_07102017181439450.csv") %>%
filter(TIME == "2013")
dta <- read.csv("/Users/stefan/Downloads/DP_LIVE_07102017181439450.csv") %>%
filter(TIME == "2013")
View(dta)
dta <- read.csv("/Users/stefan/Desktop/alcohol_consumptioin.csv")
head(dta)
dta <- read.csv("/Users/stefan/Desktop/alcohol_consumption.csv")
ggplot(data = dta, x = mpg)
head(dta)
ggplot(data = dta, aes(x = country, y = consumption_litres_per_capita)
ggplot(data = dta, aes(x = country, y = consumption_litres_per_capita))
ggplot(data = dta, aes(x = country, y = consumption_litres_per_capita)) +
geom_bar()
ggplot(data = dta, aes(x = country, y = consumption_litres_per_capita)) +
geom_bar(stat = "identity")
ggplot(data = dta, aes(x = country, y = consumption_litres_per_capita)) +
geom_bar(stat = "identity") +
coord_flip()
dta <- read.csv("/Users/stefan/Desktop/alcohol_consumption.csv")
head(mtcars)
ggplot(data = dta, aes(x = country, y = consumption_litres_per_capita)) +
geom_bar(stat = "identity") +
coord_flip()
forcats::fct_reorder()
ggplot(data = dta, aes(x = forcats::fct_reorder(consumption_litres_per_capita, country),
y = consumption_litres_per_capita)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(data = dta, aes(x = forcats::fct_reorder(country, consumption_litres_per_capita),
y = consumption_litres_per_capita)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(data = dta, aes(x = forcats::fct_reorder(country, consumption_litres_per_capita),
y = consumption_litres_per_capita)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Consumption of alcohol per capita")
ggplot(data = dta, aes(x = forcats::fct_reorder(country, consumption_litres_per_capita),
y = consumption_litres_per_capita)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Consumption of alcohol per capita") +
theme_minimal()
ggplot(data = dta, aes(x = forcats::fct_reorder(country, consumption_litres_per_capita),
y = consumption_litres_per_capita)) +
geom_point(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Consumption of alcohol per capita") +
theme_minimal()
dta <- read.csv("/Users/stefan/Desktop/alcohol_consumption.csv") %>%
filter(consumption_litres_per_capita > 80)
head(mtcars)
ggplot(data = dta, aes(x = forcats::fct_reorder(country, consumption_litres_per_capita),
y = consumption_litres_per_capita)) +
geom_point(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Consumption of alcohol per capita") +
theme_minimal()
rio::export(dta, file = "beer_consumption.sav")
getwd()
rio::export(dta, file = "data/beer_consumption.sav")
median(dta$consumption_litres_per_capita)
mean(dta$consumption_litres_per_capita)
ggplot(data = dta, aes(x = forcats::fct_reorder(country, consumption_litres_per_capita),
y = consumption_litres_per_capita)) +
geom_point(stat = "identity", size = 4) +
coord_flip() +
labs(x = NULL, y = "Consumption of alcohol per capita") +
theme_minimal()
dta <- read.csv("data/parlgov_elections.csv",
fileEncoding = "utf-8")
dta_ireland <- dta %>%
filter(country_name == "Ireland")
View(dta_ireland)
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil"))
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil")) %>%
filter(election_type == "parliament")
View(dta_ireland)
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name)
rio::export(dta_ireland, "data_ire_elections.sav")
rio::export(dta_ireland, "data_ire_elections.xlsx")
rio::export(dta_ireland, "data/data_ire_elections.xlsx")
rio::export(dta_ireland, "data/data_ire_elections.sav")
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short)
rio::export(dta_ireland, "data/data_ire_elections.sav")
?export
rio::export(dta_ireland, "data/data_ire_elections.sav",
characterize = TRUE)
rio::export(dta_ireland, factorize("data/data_ire_elections.sav"))
rio::export(dta_ireland, factorize("data/data_ire_elections.sav"))
rio::export(factorize(dta_ireland), "data/data_ire_elections.sav")
rio::export(characterize(dta_ireland), "data/data_ire_elections.sav")
library(rio)
rio::export(characterize(dta_ireland), "data/data_ire_elections.sav")
rio::export(factorize(dta_ireland), "data/data_ire_elections.sav")
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
rio::export(factorize(dta_ireland), "data/data_ire_elections.sav")
rio::export(characterize(dta_ireland), "data/data_ire_elections.sav")
haven::write_sas(dta_ireland, "data/data_ire_elections2.sav")
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour", "Sinn Fein")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
head(dta_ireland)
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour", "Sinn Fein")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date), y = vote_share))
ggplot(dta_ireland, aes(x = as.Date(election_date), y = vote_share)) +
geom_line()
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line()
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour", "Sinn Fein")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line()
dta <- read.csv("data/parlgov_elections.csv",
fileEncoding = "utf-8")
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour", "Sinn Fein")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line()
View(dta)
dta_ireland <- dta %>%
filter(country_name == "Ireland")
dta_ireland
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour Party", "Sinn Féin")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line()
dta_ireland <- dta %>%
filter(country_name == "Ireland")
View(dta_ireland)
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour Party", "Provisional Sinn Féin")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line()
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour Party")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line() +
labs(x = "Year", y = )
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line() +
labs(x = "Year", y = "Percentage vote share")
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 2) +
labs(x = "Year", y = "Percentage vote share")
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
labs(x = "Year", y = "Percentage vote share")
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("green", "blue", "darkred"))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("green", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share")
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share")
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme_minimal()
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme_bw()
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme(legend.title = element_text())
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme(legend.title = element_blank())
View(dta)
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme(legend.title = element_blank())
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme(legend.title = element_blank()) +
theme_bw()
rio::export(characterize(dta_ireland), "data/data_ire_elections.sav")
library(tidyverse)
dta <- read.csv("data/parlgov_elections.csv",
fileEncoding = "utf-8")
dta_ireland <- dta %>%
filter(country_name == "Ireland") %>%
filter(party_name %in% c("Fine Gael", "Fianna Fáil", "Labour Party")) %>%
filter(election_type == "parliament") %>%
select(country_name:party_name_short) %>%
mutate(country_name = as.factor(country_name),
election_type = as.factor(election_type),
party_name_short = as.factor(party_name_short))
ggplot(dta_ireland, aes(x = as.Date(election_date),
y = vote_share,
colour = party_name_short)) +
geom_line(size = 1.4, alpha = 0.8) +
scale_colour_manual(values = c("darkgreen", "blue", "darkred")) +
labs(x = "Year", y = "Percentage vote share") +
theme(legend.title = element_blank()) +
theme_bw()
rio::export(characterize(dta_ireland), "data/data_ire_elections.sav")
