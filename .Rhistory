geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.1, title = "Hurling"))
ggsave("plots/mt_01_hurling_means.pdf", width = 5, height = 3)
with(df, boot.mean(wins_football, B = 1000, binwidth = 0.1, title = "Football"))
ggsave("plots/mt_02_football_means.pdf", width = 5, height = 3)
df %>%
arrange(- wins_hurling) %>%
head() %>%
select(-wins_football)
df %>%
arrange(- wins_football) %>%
head() %>%
select(-wins_hurling)
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.1, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.1, title = "Football"))
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.1, title = "Hurling"))
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.1, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.1, title = "Football"))
gridExtra::grid.arrange(hurling, football, nrow = 1)
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.1, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.1, title = "Football"))
pdf("plots/mt_01_sampling_means.pdf", width = 5, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
pdf("plots/mt_01_sampling_means.pdf", width = 5, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
library(tidyverse)
df <- read.csv("data/gaa_hurling_champions.csv")
table(df$wins_football)
df %>%
arrange(- wins_football) %>%
head() %>%
select(-wins_hurling)
df %>%
arrange(- wins_hurling) %>%
head() %>%
select(-wins_football)
mean(df$wins_hurling)
ggplot(df, aes(x = wins_hurling)) +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_hurling), colour = "red") +
labs(x = "All Ireland Senior Hurling Titles", y = "Number of Counties") +
ggsave("plots/mt_01_hurling.pdf", width = 5, height = 3)
ggplot(df, aes(x = wins_football)) +
geom_histogram() +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_football), colour = "red") +
labs(x = "All Ireland Senior Football Titles", y = "Number of Counties") +
ggsave("plots/mt_01_football.pdf", width = 5, height = 3)
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
require(ggplot2)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
library(tidyverse)
df <- read.csv("data/gaa_hurling_champions.csv")
table(df$wins_football)
df %>%
arrange(- wins_football) %>%
head() %>%
select(-wins_hurling)
df %>%
arrange(- wins_hurling) %>%
head() %>%
select(-wins_football)
mean(df$wins_hurling)
ggplot(df, aes(x = wins_hurling)) +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_hurling), colour = "red") +
labs(x = "All Ireland Senior Hurling Titles", y = "Number of Counties") +
ggsave("plots/mt_01_hurling.pdf", width = 5, height = 3)
ggplot(df, aes(x = wins_football)) +
geom_histogram() +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_football), colour = "red") +
labs(x = "All Ireland Senior Football Titles", y = "Number of Counties") +
ggsave("plots/mt_01_football.pdf", width = 5, height = 3)
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
require(ggplot2)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=5*B,replace=TRUE), B, 5)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
library(gridExtra)
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
library(gridExtra)
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
boot.mean <-  function(x, B, binwidth=NULL, title) {
#n = length(x)
n <- 10
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 10000, binwidth = 0.2, title = "Hurling"))
hurling
boot.mean <-  function(x, B, binwidth=NULL, title) {
#n = length(x)
n <- 10
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 10000, binwidth = 0.2, title = "Hurling"))
hurling
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
#n <- 10
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 10000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 10000, binwidth = 0.2, title = "Football"))
football
library(tidyverse)
df <- read.csv("data/gaa_hurling_champions.csv")
table(df$wins_football)
df %>%
arrange(- wins_football) %>%
head() %>%
select(-wins_hurling)
df %>%
arrange(- wins_hurling) %>%
head() %>%
select(-wins_football)
mean(df$wins_hurling)
ggplot(df, aes(x = wins_hurling)) +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_hurling), colour = "red") +
labs(x = "All Ireland Senior Hurling Titles", y = "Number of Counties") +
ggsave("plots/mt_01_hurling.pdf", width = 5, height = 3)
ggplot(df, aes(x = wins_football)) +
geom_histogram() +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_football), colour = "red") +
labs(x = "All Ireland Senior Football Titles", y = "Number of Counties") +
ggsave("plots/mt_01_football.pdf", width = 5, height = 3)
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
#n <- 10
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 10000, binwidth = 0.2, title = "Hurling"))
hurling
ggplot(df, aes(x = wins_football)) +
geom_histogram() +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_football), colour = "red") +
labs(x = "All Ireland Senior Football Titles", y = "Number of Counties") +
ggsave("plots/mt_01_football.pdf", width = 5, height = 3)
df <- read.csv("data/gaa_hurling_champions.csv")
table(df$wins_football)
df %>%
arrange(- wins_football) %>%
head() %>%
select(-wins_hurling)
df %>%
arrange(- wins_hurling) %>%
head() %>%
select(-wins_football)
mean(df$wins_hurling)
ggplot(df, aes(x = wins_hurling)) +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_hurling), colour = "red") +
labs(x = "All Ireland Senior Hurling Titles", y = "Number of Counties") +
ggsave("plots/mt_01_hurling.pdf", width = 5, height = 3)
ggplot(df, aes(x = wins_football)) +
geom_histogram() +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_football), colour = "red") +
labs(x = "All Ireland Senior Football Titles", y = "Number of Counties") +
ggsave("plots/mt_01_football.pdf", width = 5, height = 3)
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
#n <- 10
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 10000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 10000, binwidth = 0.2, title = "Football"))
library(gridExtra)
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
football
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
hurling
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
hurling
library(tidyverse)
df <- read.csv("data/gaa_hurling_champions.csv")
table(df$wins_football)
df %>%
arrange(- wins_football) %>%
head() %>%
select(-wins_hurling)
df %>%
arrange(- wins_hurling) %>%
head() %>%
select(-wins_football)
mean(df$wins_hurling)
ggplot(df, aes(x = wins_hurling)) +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_hurling), colour = "red") +
labs(x = "All Ireland Senior Hurling Titles", y = "Number of Counties") +
ggsave("plots/mt_01_hurling.pdf", width = 5, height = 3)
ggplot(df, aes(x = wins_football)) +
geom_histogram() +
geom_histogram(colour = "black", fill = "grey50") +
scale_x_continuous(breaks = c(seq(0, 36, 2))) +
geom_vline(xintercept = mean(df$wins_football), colour = "red") +
labs(x = "All Ireland Senior Football Titles", y = "Number of Counties") +
ggsave("plots/mt_01_football.pdf", width = 5, height = 3)
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)# +
#theme_minimal()
plot(p)
# interval = mean(x) + c(-1,1)*2*se
# print( interval )
# return( list(boot.statistics = boot.statistics, interval=interval, se=se, plot=p) )
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
library(gridExtra)
pdf("plots/mt_01_sampling_means.pdf", width = 10, height = 4)
gridExtra::grid.arrange(hurling, football, nrow = 1)
dev.off()
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=FALSE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)
plot(p)
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
boot.mean <-  function(x, B, binwidth=NULL, title) {
#n = length(x)
boot.samples = matrix( sample(x,size=6*B,replace=FALSE), B, 6)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)
plot(p)
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=FALSE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)
plot(p)
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
boot.mean <-  function(x, B, binwidth=NULL, title) {
n = length(x)
boot.samples = matrix( sample(x,size=n*B,replace=TRUE), B, n)
boot.statistics = apply(boot.samples,1,mean)
se = sd(boot.statistics)
if ( is.null(binwidth) )
binwidth = diff(range(boot.statistics))/30
p = ggplot(data.frame(x=boot.statistics),aes(x=x)) +
geom_histogram(aes(y=..density..),binwidth=binwidth, colour = "black", fill = "grey50") +
geom_density(color="red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)
plot(p)
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
football
df %>%
arrange(- wins_football) %>%
# head() %>%
select(-wins_hurling)
df %>%
arrange(- wins_hurling) %>%
# head() %>%
select(-wins_football)
boot.mean <-  function(x, B, binwidth=NULL, title) {
n <-  length(x)
boot.samples <-  matrix(sample(x, size = n*B, replace=TRUE), B, n)
boot.statistics <-  apply(boot.samples, 1, mean)
se <-  sd(boot.statistics)
if (is.null(binwidth))
binwidth = diff(range(boot.statistics)) / 30
p <-  ggplot(data.frame(x=boot.statistics),aes(x = x)) +
geom_histogram(aes(y = ..density..), binwidth = binwidth, colour = "black", fill = "grey50") +
geom_density(color = "red") +
labs(x = "Sampling distribution of the sample mean") +
ggtitle(label = title)
plot(p)
}
hurling <- with(df, boot.mean(wins_hurling, B = 1000, binwidth = 0.2, title = "Hurling"))
football <- with(df, boot.mean(wins_football, B = 1000, binwidth = 0.2, title = "Football"))
library(gridExtra)
